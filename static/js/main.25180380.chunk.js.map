{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","createTodo","props","onAdd","submitMovie","preventDefault","this","onSubmit","placeholder","onChange","required","type","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25180380.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  createTodo = () => {\n    this.props.onAdd(this.state.movie);\n  }\n\n  submitMovie = (event) => {\n    event.preventDefault();\n    this.createTodo();\n    this.setState(state => ({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    }));\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form\n        onSubmit={this.submitMovie}\n        className=\"form\"\n      >\n        <div>\n          <strong>\n            Title:\n          </strong>\n          <input\n            name=\"title\"\n            value={title}\n            placeholder=\"Title\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n        <div>\n          <strong>\n            Describe:\n          </strong>\n          <input\n            name=\"description\"\n            value={description}\n            placeholder=\"Description\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n          />\n        </div>\n        <div>\n          <strong>\n            ImgUrl:\n          </strong>\n          <input\n            name=\"imgUrl\"\n            value={imgUrl}\n            placeholder=\"https://\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n        <div>\n          <strong>\n            ImdbUrl:\n          </strong>\n          <input\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            placeholder=\"https://\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n        <div>\n          <strong>\n            ImdbId:\n          </strong>\n          <input\n            name=\"imdbId\"\n            value={imdbId}\n            placeholder=\"unique ID\"\n            onChange={this.handleChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: propTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}